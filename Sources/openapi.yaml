openapi: 3.1.0
info:
  title: API
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'
paths:
  /user:
    post:
      operationId: createUser
      summary: Creates a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
  /room:
    post:
      operationId: createRoom
      summary: Creates a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: [string, 'null']
      responses:
        '200':
          description: The created room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomResponse'
  /room/search:
    get:
      operationId: searchRoom
      summary: Searches for a room
      parameters:
        - in: query
          name: query
          schema:
            type: string
          required: true
      responses:
        '200':
          description: The search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoomResponse'
  /chat:
    post:
      operationId: getMessages
      summary: Subscribe to chat updates
      parameters:
        - in: header
          name: user_id
          schema:
            type: string
            format: uuid
          required: true
        - in: header
          name: room_id
          schema:
            type: string
            format: uuid
          required: true
      requestBody:
        required: true
        content:
          application/jsonl:
            schema:
              $ref: '#/components/schemas/ChatMessage'
      responses:
        '200':
          description: A stream of chat updates
          content:
            application/jsonl:
              schema:
                $ref: '#/components/schemas/ChatMessage'
components:
  schemas:
    UserResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    RoomResponse:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: [string, 'null']
    ChatMessage:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserResponse'
        room:
          $ref: '#/components/schemas/RoomResponse'
        message:
          oneOf:
            - $ref: '#/components/schemas/JoinMessage'
            - $ref: '#/components/schemas/TextMessage'
            - $ref: '#/components/schemas/LeaveMessage'
            - $ref: '#/components/schemas/DisconnectMessage'
            - $ref: '#/components/schemas/HeartbeatMessage'
      required:
        - user
        - room
        - message
    JoinMessage:
      type: object
      properties:
        type:
          type: string
          enum: [join]
      required:
        - type
    TextMessage:
      type: object
      properties:
        type:
          type: string
          enum: [message]
        content:
          type: string
        timestamp:
          type: string
          format: date-time
      required:
        - type
        - content
        - timestamp
    LeaveMessage:
      type: object
      properties:
        type:
          type: string
          enum: [leave]
      required:
        - type
    DisconnectMessage:
      type: object
      properties:
        type:
          type: string
          enum: [disconnect]
      required:
        - type
    HeartbeatMessage:
      type: object
      properties:
        type:
          type: string
          enum: [heartbeat]
      required:
        - type
